version: "3.9"

services:
  workspace:
    build:
      context: ./docker/workspace
      dockerfile: Dockerfile
      args:
        - NEW_RELIC_AGENT_VERSION=${NEW_RELIC_AGENT_VERSION}
    ports:
      - ${WORKSPACE_PORT}:9001
    #    command: ["/bin/bash", "-c", "php artisan serve --host=0.0.0.0 --port=9001"]
    platform: linux/amd64
    volumes:
      - ./project/:/project/
      - ./docker/workspace/conf.d/php.ini:/usr/local/etc/php/conf.d/laravel.ini
      - ./docker/workspace/conf.d/newrelic.ini:/usr/local/etc/php/conf.d/newrelic.ini
      - ./docker/workspace/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/workspace/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    networks:
      - laravel-3rd-party
  elasticsearch:
    image: elasticsearch:8.3.2
    container_name: elasticsearch_${APP_NAME}
    restart: unless-stopped
    tty: true
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./docker/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - ${ELASTIC_PORT}:9200
    networks:
      - laravel-3rd-party
  kibana:
    image: kibana:8.3.2
    container_name: kibana_${APP_NAME}
    restart: unless-stopped
    tty: true
    volumes:
      - ./docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - KIBANA_SYSTEM_PASSWORD=${KIBANA_SYSTEM_PASSWORD}
    networks:
      - laravel-3rd-party
  daemon:
    build:
      context: ./docker/daemon
      dockerfile: Dockerfile
      args:
        - NEW_RELIC_AGENT_VERSION=${NEW_RELIC_AGENT_VERSION}
    platform: linux/amd64
    networks:
      - laravel-3rd-party

networks:
  laravel-3rd-party:
    driver: bridge